:alias player-move           vd
:alias is-player-move-valid  vc
:alias blank-index           vb
:alias block-animation-speed v7

:const UP    0
:const LEFT  2
:const DOWN  1
:const RIGHT 3

:const K-UP    5
:const K-LEFT  7
:const K-DOWN  8
:const K-RIGHT 9
:const K-RESET 13

: display-board
	clear
	v3 := 0  # board index

	loop
		v8 := v3
		v8 += 1
		get-tile-coordinates
		if v3 != blank-index then display-tile
		v3 += 1
	if v3 != 16 then again
	
	return

: animate-move
	# assign index of tile that is sliding to v3
	# blank-index by now has been reassigned to the new blank spot
	# which is where the sliding tile currently resides
	v3 := blank-index
	if player-move == UP begin
		v0 := 4
		v3 -= v0
	end
	if player-move == LEFT begin
		v0 := 1
		v3 -= v0
	end
	if player-move == DOWN begin
		v0 := 4
		v3 += v0
	end
	if player-move == RIGHT begin
		v0 := 1
		v3 += v0
	end
	i := board
	i += v3
	load v0
	v8 := v0
	v3 := blank-index

	# do actual animation
	get-tile-coordinates
	display-tile
	v6 := 0
	loop
		get-tile-coordinates
		if player-move == UP then v2 -= v6
		if player-move == LEFT then v1 -= v6
		if player-move == DOWN then v2 += v6
		if player-move == RIGHT then v1 += v6
		display-tile
		v0 := 2
		delay := v0
		loop
			v0 := delay
		if v0 != 0 then again
		display-tile
		v6 += block-animation-speed
	if v6 != 16 then again
	get-tile-coordinates
	if player-move == UP then v2 -= v6
	if player-move == LEFT then v1 -= v6
	if player-move == DOWN then v2 += v6
	if player-move == RIGHT then v1 += v6
	display-tile

	return
	

# parameters: v1 - x position
# parameters: v2 - y position
# parameters: v8 - tile value
: display-tile
	i := tile
	sprite v1 v2 0

	i := numbers
	v0 := 0
	v4 := 32
	loop
		i += v4
		v0 += 1
	if v0 != v8 then again
	sprite v1 v2 0
	
	return

# parameters: v3 - board index
# returns:    v1 - x position
# returns:    v2 - y position
: get-tile-coordinates
	v0 := 0b11
	
	# find x coordinate
	v0 &= v3
	v4 := 0
	if v0 == v4 then v1 := 2

	v0 &= v3
	v4 := 1
	if v0 == v4 then v1 := 18

	v0 &= v3
	v4 := 2
	if v0 == v4 then v1 := 34

	v0 &= v3
	v4 := 3
	if v0 == v4 then v1 := 50

	# find y coordinate
	v4 := 4
	if v3 < v4 begin
		v2 := 1
		return
	end

	v4 := 8
	if v3 < v4 begin
		v2 := 17
		return
	end

	v4 := 12
	if v3 < v4 begin
		v2 := 33
		return
	end

	v2 := 49
	return

: get-player-move
	loop
		v0 := key
		if v0 == K-UP begin
			player-move := UP
			return
		end
		if v0 == K-LEFT begin
			player-move := LEFT
			return
		end
		if v0 == K-DOWN begin
			player-move := DOWN
			return
		end
		if v0 == K-RIGHT begin
			player-move := RIGHT
			return
		end
	again

: check-player-move
	is-player-move-valid := 1

	if player-move == UP begin
		if blank-index > 11 then is-player-move-valid := 0
	end
	if player-move == LEFT begin
		v0 := blank-index
		v1 := 0b11
		v0 &= v1
		if v0 == 3 then is-player-move-valid := 0
	end
	if player-move == DOWN begin
		if blank-index < 4 then is-player-move-valid := 0
	end
	if player-move == RIGHT begin
		v0 := blank-index
		v1 := 0b11
		v0 &= v1
		if v0 == 0 then is-player-move-valid := 0
	end

	return

: make-move
	if player-move == UP begin
		v1 := blank-index
		v2 := 4
		v1 += v2
		i := board
		i += v1
		load v0
		i := board
		i += blank-index
		save v0
		v0 := 0
		i := board
		i += v1
		save v0
		blank-index += v2
	end
	if player-move == LEFT begin
		v1 := blank-index
		v2 := 1
		v1 += v2
		i := board
		i += v1
		load v0
		i := board
		i += blank-index
		save v0
		v0 := 0
		i := board
		i += v1
		save v0
		blank-index += v2
	end
	if player-move == DOWN begin
		v1 := blank-index
		v2 := 4
		v1 -= v2
		i := board
		i += v1
		load v0
		i := board
		i += blank-index
		save v0
		v0 := 0
		i := board
		i += v1
		save v0
		blank-index -= v2
	end
	if player-move == RIGHT begin
		v1 := blank-index
		v2 := 1
		v1 -= v2
		i := board
		i += v1
		load v0
		i := board
		i += blank-index
		save v0
		v0 := 0
		i := board
		i += v1
		save v0
		blank-index -= v2
	end

	return

: shuffle-board
	block-animation-speed := 4
	v5 := 50 # loop counter
	v6 := DOWN # keep track of previous move so you don't slide a piece back to where it started
		   # just start it with something so that the first move can be down or right
	: shuffle-loop
		player-move := random 0b11
		check-player-move
		if is-player-move-valid == 0 then jump shuffle-loop
		if player-move == UP begin
			if v6 == DOWN then jump shuffle-loop
		end
		if player-move == DOWN begin
			if v6 == UP then jump shuffle-loop
		end
		if player-move == LEFT begin
			if v6 == RIGHT then jump shuffle-loop
		end
		if player-move == RIGHT begin
			if v6 == LEFT then jump shuffle-loop
		end
		make-move
		animate-move
		v5 += -1
		v6 := player-move
	if v5 != 0 then jump shuffle-loop
	block-animation-speed := 2
	return

: check-for-win
	v1 := 1
	i := board
	loop
		load v0
		if v0 != v1 then return
		v1 += 1
	if v1 != 16 then again
	jump win-screen	
	return

: win-screen
	print-win-message
	loop
		v0 := key
	if v0 != K-RESET then again
	jump main
	return

: print-win-message
	v0 := 70
	v1 := 20
	i := letter-y
	sprite v0 v1 0

	v0 := 86
	v1 := 20
	i := letter-o
	sprite v0 v1 0

	v0 := 108
	v1 := 20
	i := letter-u
	sprite v0 v1 0

	v0 := 70
	v1 := 40
	i := letter-w
	sprite v0 v1 0

	v0 := 86
	v1 := 40
	i := letter-i
	sprite v0 v1 0

	v0 := 108
	v1 := 40
	i := letter-n
	sprite v0 v1 0
	return

: main
	hires
	blank-index := 15
	display-board
	shuffle-board
	: game-loop
		get-player-move
		check-player-move
		if is-player-move-valid == 0 then jump game-loop
		make-move
		animate-move
		check-for-win
	jump game-loop

: tile
	0b11111111 0b11111100
	0b11111111 0b11111100
	0b11111111 0b11111100
	0b11111111 0b11111100
	0b11111111 0b11111100
	0b11111111 0b11111100
	0b11111111 0b11111100
	0b11111111 0b11111100
	0b11111111 0b11111100
	0b11111111 0b11111100
	0b11111111 0b11111100
	0b11111111 0b11111100
	0b11111111 0b11111100
	0b11111111 0b11111100
	0b00000000 0b00000000
	0b00000000 0b00000000

: numbers
	# just a note, I made this font by examining (copying) 'Mister Pixel 16' font on fontriver.com
	# I would give more credits but the author's website is in French
	# http://www.fontriver.com/font/mister_pixel_16/
	# http://www.typophage.com/

	# this is a filler block so that it is easier to index numbers
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

	# 1
0x00 0x00 0x00 0x00 0x01 0x80 0x03 0x80 
0x05 0x80 0x01 0x80 0x01 0x80 0x01 0x80 
0x01 0x80 0x01 0x80 0x01 0x80 0x07 0xE0 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

	# 2
0x00 0x00 0x0E 0x00 0x1F 0x00 0x31 0x80 
0x31 0x80 0x01 0x80 0x03 0x80 0x07 0x00 
0x0E 0x00 0x1C 0x00 0x38 0x00 0x30 0x00 
0x3F 0x80 0x00 0x00 0x00 0x00 0x00 0x00 

	# 3
0x00 0x00 0x00 0x00 0x07 0xC0 0x0C 0x60 
0x0C 0x60 0x00 0x60 0x03 0xC0 0x00 0x60 
0x00 0x60 0x0C 0x60 0x0C 0x60 0x07 0xC0 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

	# 4
0x00 0x00 0x00 0x00 0x01 0xC0 0x01 0xC0 
0x02 0xC0 0x02 0xC0 0x04 0xC0 0x04 0xC0 
0x0F 0xE0 0x00 0xC0 0x00 0xC0 0x00 0xC0 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

	# 5
0x00 0x00 0x00 0x00 0x07 0xC0 0x0C 0x00 
0x0C 0x00 0x0F 0xC0 0x00 0xC0 0x00 0xC0 
0x00 0xC0 0x0C 0xC0 0x0C 0xC0 0x07 0x80 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

	# 6
0x00 0x00 0x00 0x00 0x03 0xC0 0x04 0x00 
0x0C 0x00 0x0C 0x00 0x0F 0xC0 0x0C 0x60 
0x0C 0x60 0x0C 0x60 0x04 0x60 0x03 0x80 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

	# 7
0x00 0x00 0x00 0x00 0x0F 0xE0 0x00 0x60 
0x01 0xE0 0x01 0x80 0x03 0x00 0x03 0x00 
0x06 0x00 0x06 0x00 0x06 0x00 0x06 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

	# 8
0x00 0x00 0x00 0x00 0x07 0xC0 0x0C 0x60 
0x0C 0x60 0x0C 0x60 0x07 0xC0 0x0F 0xE0 
0x0C 0x60 0x0C 0x60 0x0C 0x60 0x07 0xC0 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

	# 9
0x00 0x00 0x00 0x00 0x07 0xC0 0x0C 0x60 
0x0C 0x60 0x0C 0x60 0x04 0xE0 0x03 0x60 
0x00 0x60 0x00 0x40 0x00 0xC0 0x07 0x80 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

	# 10
0x00 0x00 0x00 0x00 0x67 0xC0 0x6C 0x60 
0x6C 0x60 0x6C 0x60 0x6C 0x60 0x6C 0x60 
0x6C 0x60 0x6C 0x60 0x6C 0x60 0x67 0xC0 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 


	# 11
0x00 0x00 0x00 0x00 0x18 0xC0 0x39 0xC0 
0x5A 0xC0 0x18 0xC0 0x18 0xC0 0x18 0xC0 
0x18 0xC0 0x18 0xC0 0x18 0xC0 0x18 0xC0 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

	# 12
0x00 0x00 0x00 0x00 0x67 0xC0 0x6C 0x60 
0x6C 0x60 0x60 0xC0 0x61 0x80 0x63 0x00 
0x66 0x00 0x6C 0x00 0x68 0x00 0x6F 0xE0 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 


	# 13
0x00 0x00 0x00 0x00 0x67 0xC0 0x6C 0x60 
0x6C 0x60 0x60 0x60 0x63 0xC0 0x60 0x60 
0x60 0x60 0x6C 0x60 0x6C 0x60 0x67 0xC0 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

	# 14
0x00 0x00 0x00 0x00 0x61 0xC0 0x61 0xC0 
0x62 0xC0 0x62 0xC0 0x64 0xC0 0x64 0xC0 
0x6F 0xE0 0x60 0xC0 0x60 0xC0 0x60 0xC0 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

	# 15
0x00 0x00 0x00 0x00 0x67 0xC0 0x6C 0x00 
0x6C 0x00 0x6F 0xC0 0x60 0xC0 0x60 0xC0 
0x60 0xC0 0x6C 0xC0 0x6C 0xC0 0x67 0x80 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

: letter-y
0x00 0x00 0x10 0x04 0x08 0x08 0x04 0x10 
0x02 0x20 0x01 0xC0 0x00 0x80 0x00 0x80 
0x00 0x80 0x00 0x80 0x00 0x80 0x00 0x80 
0x00 0x80 0x00 0x00 0x00 0x00 0x00 0x00 

: letter-o
0x00 0x00 0x3F 0xC0 0x20 0x70 0x60 0x1C 
0x40 0x07 0x40 0x01 0x40 0x01 0x40 0x01 
0x40 0x01 0x60 0x03 0x20 0x02 0x30 0x04 
0x1C 0x18 0x07 0xF0 0x00 0x00 0x00 0x00 

: letter-u
0x00 0x00 0x00 0x00 0x10 0x10 0x10 0x10 
0x10 0x10 0x10 0x08 0x18 0x08 0x08 0x18 
0x08 0x10 0x08 0x10 0x0C 0x60 0x07 0x80 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

: letter-w
0x00 0x00 0x00 0x00 0x00 0x00 0x40 0x06 
0x40 0x84 0x61 0x84 0x31 0x84 0x13 0x44 
0x1A 0x6C 0x0A 0x28 0x0E 0x18 0x06 0x10 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

: letter-i
0x00 0x00 0x00 0x80 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x80 0x00 0x80 0x00 0x80 
0x00 0x80 0x00 0x80 0x00 0x80 0x00 0x80 
0x00 0x80 0x00 0x80 0x00 0x00 0x00 0x00 

: letter-n
0x00 0x00 0x00 0x00 0x30 0x20 0x3C 0x20 
0x24 0x20 0x22 0x20 0x22 0x20 0x21 0x20 
0x21 0x20 0x21 0xA0 0x20 0xE0 0x20 0x60 
0x20 0x60 0x20 0x20 0x00 0x00 0x00 0x00 

: board
	 1  2  3  4
	 5  6  7  8
	 9 10 11 12
	13 14 15  0
